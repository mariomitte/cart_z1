"""
Django settings for settings project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from pathlib import Path

from .environment import env
from .messages import message

# ON HEROKU
# ------------------------------------------------------------------------------

ON_HEROKU = os.environ.get("DYNO", "") != "" # Assumption: "DYNO" envvar wouldn't be set locally


# PROJECT ROOT DIR
# ------------------------------------------------------------------------------

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# GENERAL
# ------------------------------------------------------------------------------

SITE_ID=1 # from django sites framework

# For model fields
WEBSITE_MODEL_FIELD_LENGTH = env.int("WEBSITE_MODEL_FIELD_LENGTH", default=200)
WEBSITE_SLUG_MAX_LENGTH = env.int("WEBSITE_SLUG_MAX_LENGTH", default=40)
PRODUCT_PRICE_MAX_DIGITS = env.int("PRODUCT_PRICE_MAX_DIGITS", default=10)
IMAGE_THUMBNAIL_SIZE = env.int("IMAGE_THUMBNAIL_SIZE", 300)
IMAGE_PREVIEW_SIZE = env.int("IMAGE_PREVIEW_SIZE", 1000)
SHOP_CURRENCY = env.str("SHOP_CURRENCY", default='EUR')
MESSAGE = message
DISCOUNT_ON_QUANTITY_START_FROM = env.int(
    "DISCOUNT_ON_QUANTITY_START_FROM", default=2)
STORE_HAS_QUANTITY_DISCOUNT_VALUE = env.float(
    "STORE_HAS_QUANTITY_DISCOUNT_VALUE", default=4.99)

# Increment on new releases
VERSION = "v0.2.3"

# Sessions framework
CART_SESSION_ID = env.str("CART_SESSION_ID", default='cart')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str("DJANGO_SECRET_KEY",
        default='4&jd!*l74qbt2q3tr@&c#_c$r1jm2bb)b+eopwh+wf#gp_u_g@')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DJANGO_DEBUG", default=False)

ALLOWED_HOSTS = env.list("DJANGO_ALLOWED_HOSTS", default=[])

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = 'website:home'
LOGIN_URL = 'account:login'
LOGOUT_URL = 'account:logout'

# APPS
# ------------------------------------------------------------------------------

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
]

THIRD_PARTY_APPS = [
    'storages',
    'imagekit',
    'rules',
]

LOCAL_APPS = [
    'apps.website',
    'apps.account',
    'apps.shop',
    'apps.cart',
    'apps.orders',
    'apps.coupons',
]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS
INSTALLED_APPS += env.list("DJANGO_DEV_INSTALLED_APPS", default=[])

# MIDDLEWARE
# ------------------------------------------------------------------------------

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # https://warehouse.python.org/project/whitenoise/
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
] + env.list("DJANGO_DEV_MIDDLEWARE", default=[])

ROOT_URLCONF = 'settings.urls'

WEBSITE_CONTEXT_PROCESSORS = [
    'django.template.context_processors.debug',
    'django.template.context_processors.request',
    'django.contrib.auth.context_processors.auth',
    'django.contrib.messages.context_processors.messages',
    'apps.orders.context_processors.currency',
    'apps.cart.context_processors.cart',
] + env.list("DJANGO_ADDS_WEBSITE_CONTEXT_PROCESSORS", default=[])

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': WEBSITE_CONTEXT_PROCESSORS,
        },
    },
]

WSGI_APPLICATION = 'settings.wsgi.application'

# DATABASE
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

if ON_HEROKU is False:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    import dj_database_url
    DATABASES = {'default': dj_database_url.config()}


# INTERNATIONALIZATION
# https://docs.djangoproject.com/en/3.1/topics/i18n/
# ------------------------------------------------------------------------------

LANGUAGE_CODE = 'en-us'

TIME_ZONE = env.str("TIME_ZONE", default="Europe/Zagreb")

USE_I18N = True

USE_L10N = True

USE_TZ = True

# MEDIA AND STATIC FILES
# https://docs.djangoproject.com/en/3.1/howto/static-files/
# -----------i-------------------------------------------------------------------

from .storages import *

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "compiledstatic/")
STATICFILES_FINDERS = [
    "npm.finders.NpmFinder",
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

if ON_HEROKU:
    DEFAULT_FILE_STORAGE = 'settings.storage_backends.MediaStorage'

# EMAIL
# ------------------------------------------------------------------------------

SERVER_EMAIL = env.str("SERVER_EMAIL", default="Kodius shop <noreply@example.com>")
DEFAULT_FROM_EMAIL = SERVER_EMAIL

if DEBUG or env.str("EMAIL_HOST") is None:
    EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
else:
    EMAIL_HOST = env.str("EMAIL_HOST", default="smtp.gmail.com")
    EMAIL_PORT = env.int("EMAIL_PORT", default=587)
    EMAIL_HOST_USER = env.str("EMAIL_HOST_USER", default="")
    EMAIL_HOST_PASSWORD = env.str("EMAIL_HOST_PASSWORD", default="")
    EMAIL_USE_TLS = env.str("EMAIL_USE_TLS", default=True)
    EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"

# ADMIN
# ------------------------------------------------------------------------------
# Django Admin URL.
ADMIN_URL = env.str("DJANGO_ADMIN_URL", default="admin/")
# https://docs.djangoproject.com/en/dev/ref/settings/#admins
ADMINS = [(env.str("DJANGO_ADMIN_NAME", default="admin"),
           env.str("DJANGO_ADMIN_EMAIL", default="test@example.com"),)]
# https://docs.djangoproject.com/en/dev/ref/settings/#managers
MANAGERS = ADMINS

# LOGGING
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/dev/ref/settings/#logging
# See https://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "%(levelname)s %(asctime)s %(module)s "
                      "%(process)d %(thread)d %(message)s"
        }
    },
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        }
    },
    "root": {"level": "INFO", "handlers": ["console"]},
}

# DEBUG TOOLBAR
# ------------------------------------------------------------------------------

if DEBUG is True:
    DEBUG_TOOLBAR_CONFIG = {
        'SHOW_TOOLBAR_CALLBACK': lambda request: not request.is_ajax()
    }

# ON HEROKU, DEPLOYED
# ------------------------------------------------------------------------------

if ON_HEROKU:
    # Security
    SESSION_COOKIE_HTTPONLY = True
    CSRF_COOKIE_HTTPONLY = True
    SECURE_SSL_REDIRECT = True
    SECURE_HSTS_SECONDS = 60 * 60  # 1 hour
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_FRAME_DENY = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# NPM
# ------------------------------------------------------------------------------

NPM_ROOT_PATH = "./"

NPM_FILE_PATTERNS = {
    "a17t": [os.path.join("dist", "a17t.css"),
             os.path.join("dist", "tailwind.css")],
    "@fortawesome": [os.path.join("fontawesome-free", "js", "all.min.js")],
}

# MESSAGES FRAMEWORK
# ------------------------------------------------------------------------------

from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.INFO: "~info",
    messages.WARNING: "~warning",
    messages.ERROR: "~critical",
    messages.SUCCESS: "~positive",
}

# PASSWORDS
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators
# ------------------------------------------------------------------------------

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# AUTHENTICATION MODEL
# ------------------------------------------------------------------------------

AUTH_USER_MODEL = 'account.User'
AUTHENTICATION_BACKENDS = (
    "rules.permissions.ObjectPermissionBackend",
    "django.contrib.auth.backends.ModelBackend",
    # "allauth.account.auth_backends.AuthenticationBackend",
)

# DJANGO ALLAUTH SETTINGS
# ------------------------------------------------------------------------------

# ACCOUNT_AUTHENTICATION_METHOD = "email"
# ACCOUNT_EMAIL_REQUIRED = True
# ACCOUNT_UNIQUE_EMAIL = True
# ACCOUNT_USER_MODEL_USERNAME_FIELD = False
# ACCOUNT_USERNAME_REQUIRED = False
# ACCOUNT_EMAIL_SUBJECT_PREFIX = ""
# ACCOUNT_USER_DISPLAY = lambda k: k.email
# ACCOUNT_SIGNUPS_ENABLED = env.bool("ACCOUNT_SIGNUPS_ENABLED", default="False") == "True"
# ACCOUNT_EMAIL_VERIFICATION = env.str("ACCOUNT_EMAIL_VERIFICATION", default="mandatory")
# ACCOUNT_SIGNUP_FORM_CLASS = 'apps.website.forms.SignupForm'

# OTHER PROJECT SETTINGS HERE
# ------------------------------------------------------------------------------

# if ON_HEROKU:
#     BROKER_URL = os.environ.get("CLOUDAMQP_URL", "django://")
#     #CELERY_BROKER_URL = 'amqp://localhost'
#     BROKER_POOL_LIMIT = 1
#     BROKER_CONNECTION_MAX_RETRIES = 100
#     CELERY_TASK_SERIALIZER="json"
#     CELERY_RESULT_SERIALIZER="json"
#     CELERY_RESULT_BACKEND = "amqp://"
#     CELERY_ACCEPT_CONTENT = ['application/json']
#     CELERY_TASK_SERIALIZER = 'json'
#     CELERY_RESULT_SERIALIZER = 'json'
#     CELERY_TIMEZONE = 'Canada/Eastern'
